{"version":3,"file":"static/js/633.17dabffe.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styles.js","components/LoginForm/LoginForm.jsx","pages/Login.js","../node_modules/@mui/icons-material/LoginOutlined.js","../node_modules/@mui/material/CssBaseline/CssBaseline.js","../node_modules/@mui/private-theming/useTheme/ThemeContext.js","../node_modules/@mui/private-theming/useTheme/useTheme.js","../node_modules/@mui/private-theming/ThemeProvider/nested.js","../node_modules/@mui/private-theming/ThemeProvider/ThemeProvider.js","../node_modules/@mui/system/esm/ThemeProvider/ThemeProvider.js","../node_modules/@mui/material/styles/ThemeProvider.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const Link = styled(NavLink)`\n  font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;\n  font-weight: 400;\n  font-size: 0.875rem;\n  line-height: 1.43;\n  letter-spacing: 0.01071em;\n  color: #1976d2;\n  -webkit-text-decoration: underline;\n  text-decoration: underline;\n  text-decoration-color: currentcolor;\n  text-decoration-color: rgba(25, 118, 210, 0.4);\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport {\n  Avatar,\n  Button,\n  CssBaseline,\n  TextField,\n  Grid,\n  Box,\n  Typography,\n  Container,\n  FormControl,\n} from '@mui/material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport LoginOutlinedIcon from '@mui/icons-material/LoginOutlined';\nimport { Link } from './LoginForm.styles';\n\nconst theme = createTheme();\n\nexport const LoginForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: '#1976d2' }}>\n            <LoginOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h2\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <FormControl\n            component=\"form\"\n            onSubmit={handleSubmit}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  autoFocus\n                  value={email}\n                  onChange={e => setEmail(e.currentTarget.value)}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  value={password}\n                  onChange={e => setPassword(e.currentTarget.value)}\n                />\n              </Grid>\n            </Grid>\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link to=\"/register\">{\"Don't have an account? Sign Up\"}</Link>\n              </Grid>\n            </Grid>\n          </FormControl>\n        </Box>\n      </Container>\n    </ThemeProvider>\n\n    // <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n    //   <label className={css.label}>\n    //     Email\n    //     <input type=\"email\" name=\"email\" />\n    //   </label>\n    //   <label className={css.label}>\n    //     Password\n    //     <input type=\"password\" name=\"password\" />\n    //   </label>\n    //   <button type=\"submit\">Log In</button>\n    // </form>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <LoginForm />\n    </div>\n  );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11 7 9.6 8.4l2.6 2.6H2v2h10.2l-2.6 2.6L11 17l5-5-5-5zm9 12h-8v2h8c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-8v2h8v14z\"\n}), 'LoginOutlined');\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport useThemeProps from '../styles/useThemeProps';\nimport GlobalStyles from '../GlobalStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const html = (theme, enableColorScheme) => _extends({\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box',\n  // Fix font resize problem in iOS\n  WebkitTextSizeAdjust: '100%'\n}, enableColorScheme && !theme.vars && {\n  colorScheme: theme.palette.mode\n});\nexport const body = theme => _extends({\n  color: (theme.vars || theme).palette.text.primary\n}, theme.typography.body1, {\n  backgroundColor: (theme.vars || theme).palette.background.default,\n  '@media print': {\n    // Save printer ink.\n    backgroundColor: (theme.vars || theme).palette.common.white\n  }\n});\nexport const styles = (theme, enableColorScheme = false) => {\n  var _theme$components, _theme$components$Mui;\n  const colorSchemeStyles = {};\n  if (enableColorScheme && theme.colorSchemes) {\n    Object.entries(theme.colorSchemes).forEach(([key, scheme]) => {\n      var _scheme$palette;\n      colorSchemeStyles[theme.getColorSchemeSelector(key).replace(/\\s*&/, '')] = {\n        colorScheme: (_scheme$palette = scheme.palette) == null ? void 0 : _scheme$palette.mode\n      };\n    });\n  }\n  let defaultStyles = _extends({\n    html: html(theme, enableColorScheme),\n    '*, *::before, *::after': {\n      boxSizing: 'inherit'\n    },\n    'strong, b': {\n      fontWeight: theme.typography.fontWeightBold\n    },\n    body: _extends({\n      margin: 0\n    }, body(theme), {\n      // Add support for document.body.requestFullScreen().\n      // Other elements, if background transparent, are not supported.\n      '&::backdrop': {\n        backgroundColor: (theme.vars || theme).palette.background.default\n      }\n    })\n  }, colorSchemeStyles);\n  const themeOverrides = (_theme$components = theme.components) == null ? void 0 : (_theme$components$Mui = _theme$components.MuiCssBaseline) == null ? void 0 : _theme$components$Mui.styleOverrides;\n  if (themeOverrides) {\n    defaultStyles = [defaultStyles, themeOverrides];\n  }\n  return defaultStyles;\n};\n\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\nfunction CssBaseline(inProps) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCssBaseline'\n  });\n  const {\n    children,\n    enableColorScheme = false\n  } = props;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GlobalStyles, {\n      styles: theme => styles(theme, enableColorScheme)\n    }), children]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n  /**\n   * Enable `color-scheme` CSS property to use `theme.palette.mode`.\n   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\n   * For browser support, check out https://caniuse.com/?search=color-scheme\n   * @default false\n   */\n  enableColorScheme: PropTypes.bool\n} : void 0;\nexport default CssBaseline;","import * as React from 'react';\nconst ThemeContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== 'production') {\n  ThemeContext.displayName = 'ThemeContext';\n}\nexport default ThemeContext;","import * as React from 'react';\nimport ThemeContext from './ThemeContext';\nexport default function useTheme() {\n  const theme = React.useContext(ThemeContext);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n  return theme;\n}","const hasSymbol = typeof Symbol === 'function' && Symbol.for;\nexport default hasSymbol ? Symbol.for('mui.nested') : '__THEME_NESTED__';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@mui/utils';\nimport ThemeContext from '../useTheme/ThemeContext';\nimport useTheme from '../useTheme';\nimport nested from './nested';\n\n// To support composition of theme.\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction mergeOuterLocalTheme(outerTheme, localTheme) {\n  if (typeof localTheme === 'function') {\n    const mergedTheme = localTheme(outerTheme);\n    if (process.env.NODE_ENV !== 'production') {\n      if (!mergedTheme) {\n        console.error(['MUI: You should return an object from your theme function, i.e.', '<ThemeProvider theme={() => ({})} />'].join('\\n'));\n      }\n    }\n    return mergedTheme;\n  }\n  return _extends({}, outerTheme, localTheme);\n}\n\n/**\n * This component takes a `theme` prop.\n * It makes the `theme` available down the React tree thanks to React context.\n * This component should preferably be used at **the root of your component tree**.\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme\n  } = props;\n  const outerTheme = useTheme();\n  if (process.env.NODE_ENV !== 'production') {\n    if (outerTheme === null && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const theme = React.useMemo(() => {\n    const output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme);\n    if (output != null) {\n      output[nested] = outerTheme !== null;\n    }\n    return output;\n  }, [localTheme, outerTheme]);\n  return /*#__PURE__*/_jsx(ThemeContext.Provider, {\n    value: theme,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as MuiThemeProvider, useTheme as usePrivateTheme } from '@mui/private-theming';\nimport { exactProp } from '@mui/utils';\nimport { ThemeContext as StyledEngineThemeContext } from '@mui/styled-engine';\nimport useThemeWithoutDefault from '../useThemeWithoutDefault';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst EMPTY_THEME = {};\nfunction useThemeScoping(themeId, upperTheme, localTheme, isPrivate = false) {\n  return React.useMemo(() => {\n    const resolvedTheme = themeId ? upperTheme[themeId] || upperTheme : upperTheme;\n    if (typeof localTheme === 'function') {\n      const mergedTheme = localTheme(resolvedTheme);\n      const result = themeId ? _extends({}, upperTheme, {\n        [themeId]: mergedTheme\n      }) : mergedTheme;\n      // must return a function for the private theme to NOT merge with the upper theme.\n      // see the test case \"use provided theme from a callback\" in ThemeProvider.test.js\n      if (isPrivate) {\n        return () => result;\n      }\n      return result;\n    }\n    return themeId ? _extends({}, upperTheme, {\n      [themeId]: localTheme\n    }) : _extends({}, upperTheme, localTheme);\n  }, [themeId, upperTheme, localTheme, isPrivate]);\n}\n\n/**\n * This component makes the `theme` available down the React tree.\n * It should preferably be used at **the root of your component tree**.\n *\n * <ThemeProvider theme={theme}> // existing use case\n * <ThemeProvider theme={{ id: theme }}> // theme scoping\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme,\n    themeId\n  } = props;\n  const upperTheme = useThemeWithoutDefault(EMPTY_THEME);\n  const upperPrivateTheme = usePrivateTheme() || EMPTY_THEME;\n  if (process.env.NODE_ENV !== 'production') {\n    if (upperTheme === null && typeof localTheme === 'function' || themeId && upperTheme && !upperTheme[themeId] && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const engineTheme = useThemeScoping(themeId, upperTheme, localTheme);\n  const privateTheme = useThemeScoping(themeId, upperPrivateTheme, localTheme, true);\n  return /*#__PURE__*/_jsx(MuiThemeProvider, {\n    theme: privateTheme,\n    children: /*#__PURE__*/_jsx(StyledEngineThemeContext.Provider, {\n      value: engineTheme,\n      children: children\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n  /**\n   * The design system's unique id for getting the corresponded theme when there are multiple design systems.\n   */\n  themeId: PropTypes.string\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"theme\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as SystemThemeProvider } from '@mui/system';\nimport THEME_ID from './identifier';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ThemeProvider(_ref) {\n  let {\n      theme: themeInput\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const scopedTheme = themeInput[THEME_ID];\n  return /*#__PURE__*/_jsx(SystemThemeProvider, _extends({}, props, {\n    themeId: scopedTheme ? THEME_ID : undefined,\n    theme: scopedTheme || themeInput\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  theme: PropTypes.object\n} : void 0;"],"names":["Link","styled","NavLink","theme","createTheme","LoginForm","useState","email","setEmail","password","setPassword","dispatch","useDispatch","ThemeProvider","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LoginOutlined","Typography","variant","FormControl","onSubmit","e","preventDefault","logIn","noValidate","mt","Grid","container","spacing","item","xs","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","value","onChange","currentTarget","type","Button","mb","justifyContent","to","Login","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","html","enableColorScheme","_extends","WebkitFontSmoothing","MozOsxFontSmoothing","boxSizing","WebkitTextSizeAdjust","vars","colorScheme","palette","mode","body","color","text","primary","typography","body1","backgroundColor","background","common","white","inProps","props","useThemeProps","children","_jsxs","React","_jsx","GlobalStyles","styles","_theme$components","_theme$components$Mui","colorSchemeStyles","colorSchemes","Object","entries","forEach","_scheme$palette","key","scheme","getColorSchemeSelector","replace","defaultStyles","fontWeight","fontWeightBold","margin","themeOverrides","components","MuiCssBaseline","styleOverrides","useTheme","ThemeContext","Symbol","for","localTheme","outerTheme","output","mergeOuterLocalTheme","nested","EMPTY_THEME","useThemeScoping","themeId","upperTheme","isPrivate","resolvedTheme","mergedTheme","result","useThemeWithoutDefault","upperPrivateTheme","usePrivateTheme","engineTheme","privateTheme","MuiThemeProvider","StyledEngineThemeContext","_excluded","_ref","themeInput","_objectWithoutPropertiesLoose","scopedTheme","THEME_ID","SystemThemeProvider","undefined"],"sourceRoot":""}